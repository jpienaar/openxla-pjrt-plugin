# Builds the plugins and performs basic smoke tests.
# This is not intended to be a long term solution and is just to hold
# things together during early development.
# It syncs to the most recent IREE nightly release and Jax head.

name: Build Smoketest

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit).
  group: build_smoketest_${{ github.event.number || github.sha }}
  cancel-in-progress: true

# Jobs are organized into groups and topologically sorted by dependencies
jobs:
  build:
    runs-on: ubuntu-20.04-64core
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # v2.5.0

      - name: "Setting up Python"
        uses: actions/setup-python@75f3110429a8c05be0e1bf360334e4cced2b63fa # v2.3.3
        with:
          python-version: "3.10"

      - name: Sync and install versions
        run: |
          # TODO: https://github.com/openxla/openxla-pjrt-plugin/issues/30
          sudo apt install -y lld
          # Since only building the runtime, exclude compiler deps (expensive).
          python ./sync_deps.py --depth 1 --submodules-depth 1 --exclude-submodule "iree:third_party/(llvm|mlir-hlo)"
          pip install -r requirements.txt

      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v2

      - name: "Install CUDA and Configure"
        run: |
          CUDA_SDK_DIR="$(../iree/third_party/nvidia_sdk_download/fetch_cuda_toolkit.py /tmp/cuda_sdk)"
          python ./configure.py --cc=clang --cxx=clang++ --cuda-sdk-dir=$CUDA_SDK_DIR

      - name: "Build Plugins"
        run: |
          bazel build :plugins --copt=-Wno-error

      - name: "Run Unittests"
        run: |
          bazel test iree/integrations/pjrt/common/... --copt=-Wno-error

      - name: "Test CPU plugin"
        run: |
          source .env.sh
          # TODO: We should be pinning/rolling a jaxlib nightly version.
          JAX_PLATFORMS=iree_cpu python test/test_simple.py
          JAX_PLATFORMS=iree_cpu python test/test_degenerate.py
          JAX_PLATFORMS=iree_cpu python test/test_transpose.py

      - name: "Build partitioner"
        run: |
          bazel build partitioner:libOpenXLAPartitioner.so --copt=-Wno-error

      - name: "Test CPU plugin (with partitioner)"
        run: |
          source .env.sh
          export IREE_PJRT_PARTITIONER_LIB_PATH=$PWD/bazel-bin/partitioner/libOpenXLAPartitioner.so
          JAX_PLATFORMS=iree_cpu python test/test_simple.py
          JAX_PLATFORMS=iree_cpu python test/test_degenerate.py

